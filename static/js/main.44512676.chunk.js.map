{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onContactChange","name","onChange","value","map","contact","vavlue","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","required","e","target","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","index","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","length","preventDefault","ContactForm","setName","phoneNumber","setPhoneNumber","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","App","setAppointments","setContacts","ROUTES","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44512676.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ContactPicker = ({ contacts, onContactChange }) => {\r\n  return (\r\n    <select name='ContactPicker' onChange={onContactChange}>\r\n      <option value=''>No Contact is Selected</option>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <option vavlue={contact} key={contact}>\r\n            {contact}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ContactPicker;\r\n","import React from 'react';\r\nimport ContactPicker from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit,\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString('en-US')\r\n      .split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  };\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onContactChange = (e) => {\r\n    setContact(e.target.value);\r\n  };\r\n  const onDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n  const onTimeChange = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <input\r\n            type='text'\r\n            name='title'\r\n            required\r\n            value={title}\r\n            onChange={onTitleChange}\r\n            placeholder='Appointment Title'\r\n          />\r\n        </label>\r\n        <label>\r\n          <ContactPicker\r\n            name='contact'\r\n            value={contact}\r\n            required\r\n            onChange={onContactChange}\r\n            placeholder='For...'\r\n            contacts={contacts.map((contact) => contact.name)} //pass an array of the names only\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type='date'\r\n            name='date'\r\n            required\r\n            min={getTodayString()}\r\n            value={date}\r\n            onChange={onDateChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type='time'\r\n            name='time'\r\n            required\r\n            value={time}\r\n            onChange={onTimeChange}\r\n          />\r\n          <input type='submit' />\r\n        </label>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Tile = ({ tile }) => {\r\n  return (\r\n    <div className='tile-container'>\r\n      {Object.values(tile).map((value, index) => {\r\n        //for every value of each tile render a <P> with the data. Can handle either contacts or appointments even though they have different number of values by using object.values\r\n        return (\r\n          <p key={index} className={`${index === 0 ? 'tile-title' : ''} tile`}>\r\n            {value}\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from '../tile/Tile';\r\n\r\nexport const TileList = ({ tiles }) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => {\r\n        return <Tile key={index} tile={tile} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState(\r\n    //if contacts exist we want to default to the first contact\r\n    contacts.length > 0 ? contacts[0].name : ''\r\n  );\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAppointment(title, contact, date, time);\r\n\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          handleSubmit={handleSubmit}\r\n          title={title}\r\n          setTitle={setTitle}\r\n          contacts={contacts}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n}) => {\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onPhoneChange = (e) => {\r\n    setPhoneNumber(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            value={name}\r\n            onChange={onNameChange}\r\n            required\r\n            placeholder='Contact Name'\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type='tel'\r\n            name='phone number'\r\n            value={phoneNumber}\r\n            onChange={onPhoneChange}\r\n            required\r\n            pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"// Regex for US Phone format\r\n            placeholder='Phone Number (###-###-####)'\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onEmailChange}\r\n            required\r\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"//Regex for email\r\n            placeholder='Contact Email'\r\n          />\r\n        </label>\r\n\r\n        <input type='submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(name, phoneNumber, email); //Adds contact if unique\r\n      setName(''); //resets the state\r\n      setPhoneNumber('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkIfDuplicate = () => {\r\n      const duplicateObject = contacts.find((contact) => contact.name === name);\r\n      return duplicateObject !== undefined;\r\n    };\r\n\r\n    if (checkIfDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate ? 'Error: Name Already Exists' : ''}\r\n        </h2>\r\n        <ContactForm\r\n          handleSubmit={handleSubmit}\r\n          name={name}\r\n          setName={setName}\r\n          phoneNumber={phoneNumber}\r\n          setPhoneNumber={setPhoneNumber}\r\n          email={email}\r\n          setEmail={setEmail}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\r\n\r\nimport { AppointmentsPage } from './containers/appointmentsPage/AppointmentsPage';\r\nimport { ContactsPage } from './containers/contactsPage/ContactsPage';\r\n\r\nfunction App() {\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const addContact = (name, phoneNumber, email) => {\r\n    setContacts([\r\n      ...contacts,\r\n      {\r\n        name: name,\r\n        phoneNumber: phoneNumber,\r\n        email: email,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const ROUTES = {\r\n    CONTACTS: '/contacts',\r\n    APPOINTMENTS: '/appointments',\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              contacts={contacts}\r\n              addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}